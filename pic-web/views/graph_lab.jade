extends simplelayout
doctype html
block content

    html(lang='zh-CN')
        head
            meta(charset='utf-8')
            meta(name="viewport" content="width=device-width, initial-scale=1")


    link(rel='stylesheet', type='text/css', media='all', href='/stylesheets/bootstrap-glyphicons.css')
    link(rel='stylesheet', type='text/css', media='all', href='/stylesheets/styles.css')
    script(src='/javascripts/jquery-1.11.0.min.js')


    script(src='/javascripts/highcharts.js')
    script(src='/javascripts/highcharts-more.js')
    //script(src='https://img.hcharts.cn/highcharts-plugins/highcharts-zh_CN.js')
    script(src='/javascripts/xrange.js')
    script(src='/javascripts/exporting.js')
    script(src='/javascripts/series-label.js')

    link(rel='stylesheet', type='text/css', media='all', href='/stylesheets/bootstrap.min.css')
    link(rel='stylesheet', type='text/css', media='all', href='/stylesheets/bootstrap-glyphicons.css')
    link(rel='stylesheet', type='text/css', media='all', href='/stylesheets/styles.css')

    div(style="width: 1000px; margin: 50px 200px;")

        ul(id="position")

    body
        div(style='height:800px;min-width: 300px;max-width: 1500px;margin: 1em auto;', id="labchart")

    script(type='text/javascript').
        function search_graph_lab() {
            var Term = !{JSON.stringify(term)};
            $.ajax({
                url: "/search/graph_lab/list",
                type: "POST",
                data: {term: Term},

                success: function (data) {

                    if (data == '') {
                        alert("No corresponding data!");
                    } else {
                        //alert("success");



                        var item = [];
                        var distinctItemId = [];
                        var distinctLabel = [];

                        var id=[];
                        var label=[];
                        var charttime=[];
                        var value=[];
                        var unit=[];
                        var flag=[];


                        var seriesArr=[];

                        for (var i = 0; i < data.length; i++) {//distinct itemid



                            id.push(data[i].ITEM_ID);
                            label.push(data[i].LABEL);
                            charttime.push(data[i].CHARTTIME);
                            value.push(data[i].VALUE);
                            unit.push(data[i].VALUEUOM);
                            flag.push(data[i].FLAG);






                            if (!item[data[i].ITEMID]) {
                                distinctItemId.push(data[i].ITEMID);
                                distinctLabel.push(data[i].LABEL);
                                item[data[i].ITEMID] = true;
                            }
                        }


                        var html = "<li><div>";
                        html += "<p><span style='color:#14334b;font-size:20px'><strong>Subject ID: </strong>" + data[0].SUBJECT_ID + "</span></p>";
                        html += "<p><span style='color:#14334b;font-size:20px'><strong>Hospital Admission ID: </strong>" + data[0].HADM_ID + "</span></p>"
                        html +="</div></li>"
                        $("#position").append($(html));


                        for(var j=0;j<distinctItemId.length;j++) {

                            var labTestData=[];
                            var k=0;//清空

                            for (var r = 0; r < data.length; r++) {

                                if (data[r].ITEMID==distinctItemId[j]){//r=0：所有item0的数据循环存储

                                labTestData[k] = {
                                    x: Date.UTC(chGMT(data[r].CHARTTIME).slice(0, 4), chGMT(data[r].CHARTTIME).slice(5, 7) - 1, chGMT(data[r].CHARTTIME).slice(8, 10), chGMT(data[r].CHARTTIME).slice(11, 13), chGMT(data[r].CHARTTIME).slice(14, 16), chGMT(data[r].CHARTTIME).slice(17, 19)),
                                    y: Number(data[r].VALUE),
                                    unit: data[r].VALUEUOM,
                                    flag: data[r].FLAG
                                }
                                k++;
                                }
                            }

                            if(j<6){//区分是否默认可见
                                seriesArr.push({//存储完毕push到series，item0完毕
                                    name: distinctLabel[j],
                                    data: labTestData,
                                    color: Highcharts.getOptions().colors[j],
                                    visible: true
                                });
                            }
                            else{
                                seriesArr.push({
                                    name: distinctLabel[j],
                                    data: labTestData,
                                    color: Highcharts.getOptions().colors[j],
                                    visible: false
                                });

                            }



                        }






                        //////////// LAB TEST DATA ////////////

                        Highcharts.chart('labchart', {
                            chart: {
                                type: 'spline',
                                marginLeft: 150,
                                zoomType: 'xy',
                                panning: true,
                                panKey: 'ctrl'
                            },





                            title: {
                                text: 'LAB TEST'
                            },
                            subtitle: {
                                text: 'Drag to select the zoom area; Press ctrl to pan the chart left or right; Click on the legend to hide or resume display.'
                            },

                            xAxis: {
                                type: 'datetime',
                                title: {
                                    text: 'Chart Time'
                                }
                            },

                            yAxis: [{
                                title: {
                                    text: 'Value'
                                },
                                tickInterval: 1

                            }],
                            tooltip: {//label样式
                                headerFormat: '<b>Item:{series.name}</b><br><b>Result:</b>{point.y}{point.unit}<br><b>{point.flag}</b><br>',
                                pointFormat: '{point.x:%A,%b.%e,%Y,%H:%M:%S}',
                                positioner: function () {//固定标签显示位置
                                    return {x: this.chart.chartWidth - this.label.width - 1, y: 0};//x: this.chart.chartWidth - this.label.width 表示right aligned；y: -1 表示align to title
                                },
                                // shadow: false,
                                // shape: 'round',
                                // borderWidth: 0,
                                // backgroundColor: 'rgba(0,0,0,0.2)',
                                crosshairs: [{            // 设置准星线样式
                                    width: 1,
                                    color: "#006cee",
                                    dashStyle: 'longdashdot'

                                }, {
                                    width: 1,
                                    color: "#006cee",
                                    dashStyle: 'longdashdot'
                                }]
                            },



                            plotOptions: {//line的图例标线
                                series: {
                                    label: {
                                        connectorAllowed: false
                                    }
                                },
                                spline: {//标志点
                                    marker: {
                                        enabled: true
                                    }
                                }
                            },


                            series: seriesArr


                        });


                    }
                }

            })
        }

        Date.prototype.format = function (format) {
            var o = {
                "M+": this.getMonth() + 1, //month
                "d+": this.getDate(), //day
                "h+": this.getHours(), //hour
                "m+": this.getMinutes(), //minute
                "s+": this.getSeconds(), //second
                "q+": Math.floor((this.getMonth() + 3) / 3), //quarter
                "S": this.getMilliseconds() //millisecond
            }
            if (/(y+)/.test(format))
                format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
            for (var k in o)
                if (new RegExp("(" + k + ")").test(format))
                    format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
            return format;
        }

        function chGMT(gmtDate) {
            var mydate = new Date(gmtDate);
            mydate.setHours(mydate.getHours());
            return mydate.format("yyyy-MM-dd hh:mm:ss");
        }
        function in_array(searchString, array) {
            for (var i = 0; i < array.length; i++) {
                if (searchString == array[i][0]) return i;
            }
            //return false;
        }








        window.onload = function () {


            search_graph_lab();



        }